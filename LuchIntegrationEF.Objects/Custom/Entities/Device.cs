//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using EF Core template.
// ''
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations.Schema;

namespace LuchIntegrationEF.Objects.Custom.Entities
{
    public partial class Device {

        public Device()
        {
            this.Events = new List<Event>();
            this.Commands = new List<Command>();
            this.InstantValues = new List<InstantValue>();
            this.Channels = new List<Channel>();
            OnCreated();
        }

        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.Required()]
        public virtual Guid Id
        {
            get;
            set;
        }

        [System.ComponentModel.DataAnnotations.Required()]
        public virtual string SerialNumber
        {
            get;
            set;
        }

        public virtual DateTimeOffset? InstallationDate
        {
            get;
            set;
        }

        public virtual DateTimeOffset? RemovalDate
        {
            get;
            set;
        }

        public virtual DateTimeOffset? ReleaseDate
        {
            get;
            set;
        }

        public virtual DateTimeOffset? LastCalibrationDate
        {
            get;
            set;
        }

        public virtual decimal? Coefficient
        {
            get;
            set;
        }

        public virtual string InstallationLocation
        {
            get;
            set;
        }

        public virtual string State
        {
            get;
            set;
        }

        public virtual string System
        {
            get;
            set;
        }

        public virtual int? BackEndId
        {
            get;
            set;
        }

        public virtual string Manufacturer
        {
            get;
            set;
        }

        public virtual DateTimeOffset? TimeStampSync
        {
            get;
            set;
        }

        public virtual DateTimeOffset? TimeStampCalc
        {
            get;
            set;
        }

        [System.ComponentModel.DataAnnotations.Required()]
        public virtual Guid ProtocolId
        {
            get;
            set;
        }

        public virtual Guid? FacilityId
        {
            get;
            set;
        }

        [System.ComponentModel.DataAnnotations.Required()]
        public virtual Guid DeviceModelId
        {
            get;
            set;
        }

        [System.ComponentModel.DataAnnotations.Required()]
        public virtual Guid DeviceTypeId
        {
            get;
            set;
        }

        public virtual Guid? ContractorId
        {
            get;
            set;
        }

        [ForeignKey(nameof(ProtocolId))]
        public virtual Protocol Protocol
        {
            get;
            set;
        }

        [ForeignKey(nameof(FacilityId))]
        public virtual Facility Facility
        {
            get;
            set;
        }

        [ForeignKey(nameof(DeviceModelId))]
        public virtual DeviceModel DeviceModel
        {
            get;
            set;
        }

        [ForeignKey(nameof(DeviceTypeId))]
        public virtual DeviceType DeviceType
        {
            get;
            set;
        }

        [ForeignKey(nameof(ContractorId))]
        public virtual Contractor Contractor
        {
            get;
            set;
        }

        public virtual IList<Event> Events
        {
            get;
            set;
        }

        public virtual IList<Command> Commands
        {
            get;
            set;
        }

        public virtual IList<InstantValue> InstantValues
        {
            get;
            set;
        }

        public virtual IList<Channel> Channels
        {
            get;
            set;
        }

        [NotMapped]
        public virtual DeviceGroup Group
        {
            get;
            set;
        }

        #region Extensibility Method Definitions

        partial void OnCreated();

        #endregion
    }

}
